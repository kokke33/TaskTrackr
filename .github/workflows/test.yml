name: Test and Quality Checks

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: tasktrackr_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Setup test environment
      run: |
        cp .env.test .env
        echo "DATABASE_URL=postgresql://test:test@localhost:5432/tasktrackr_test" >> .env

    - name: Run TypeScript check
      run: npm run check

    - name: Run tests
      run: npm run test:coverage
      env:
        DATABASE_URL: postgresql://test:test@localhost:5432/tasktrackr_test
        SESSION_SECRET: test_session_secret
        AI_PROVIDER: test
        NODE_ENV: test

    - name: Upload coverage reports
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella

    - name: Run build test
      run: npm run build

    - name: Security audit
      run: npm audit --audit-level=high
      continue-on-error: true

  lint:
    name: Code Quality
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: TypeScript check
      run: npm run check

    - name: Check for security vulnerabilities
      run: npm audit --audit-level=moderate
      continue-on-error: true

  integration:
    name: Integration Tests
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event.pull_request.base.ref == 'main'

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: tasktrackr_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Setup database
      run: |
        cp .env.test .env
        echo "DATABASE_URL=postgresql://test:test@localhost:5432/tasktrackr_test" >> .env

    - name: Run integration tests
      run: npm run test:integration
      env:
        DATABASE_URL: postgresql://test:test@localhost:5432/tasktrackr_test
        SESSION_SECRET: test_session_secret
        AI_PROVIDER: test
        NODE_ENV: test

    - name: Build application
      run: npm run build

    - name: Test built application
      run: |
        timeout 30s npm start &
        sleep 10
        curl -f http://localhost:3000 || exit 1